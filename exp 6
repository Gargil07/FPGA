HALF ADDER USING DATA FLOW MODEL 
module Half_adder(s, cout, x, y); 
output s; 
output cout; 
input x; 
input y; 
assign s=x^y; 
assign cout=x&y; 
endmodule


module Full_adder(sum, carry, x, y, cin); 
output sum; 
output carry; 
input x; 
input y; 
input cin; 
wire w1,w2,w3; 
Half_adder h1(w1,w2,x,y); 
Half_adder h2(sum,w3,w1,cin); 
or g1(carry,w2,w3); 
endmodule


RIPPLE CARRY ADDER USING 1-BIT FULL ADDER 
module ripple_carry_adder(S, cout, A, B, cin); 
output [3:0]S; 
output cout; 
input [3:0]A; 
input [3:0]B; 
input cin; 
wire c1,c2,c3; 
full_adder f1(S[0],c1,A[0],B[0],cin); 
full_adder f2(S[1],c2,A[1],B[1],c1); 
full_adder f3(S[2],c3,A[2],B[2],c2); 
full_adder f4(S[3],cout,A[3],B[3],c3); 
endmodule
